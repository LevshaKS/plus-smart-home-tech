#grpc.client.hub-routers.address= static://localhost:59090
#grpc.client.hub-routers.enableKeepAlive= true
#grpc.client.hub-routers.keepAliveWithoutCalls= true
#grpc.client.hub-routers.negotiationType= plaintext

server.port = 8082
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/scenario-db
spring.datasource.username=analyzer
spring.datasource.password=analyzer

spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.sql.init.mode=always



spring.kafka.analyzer.bootstrap-servers=localhost:9092
spring.kafka.analyzer.enable-auto-commit=false

spring.kafka.analyzer.consumer.snapshot.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.analyzer.consumer.snapshot.value-deserializer=ru.practicum.kafka.deserializer.SensorSnapshotEventDeserializer
spring.kafka.analyzer.consumer.snapshot.group-id=telemetry.analyzer.snapshot
spring.kafka.analyzer.consumer.snapshot.client-id=SnapshotsConsumer
spring.kafka.analyzer.consumer.snapshot.pull-timeout=500

spring.kafka.analyzer.consumer.hub.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.analyzer.consumer.hub.value-deserializer=ru.practicum.kafka.deserializer.HubEventDeserializer
spring.kafka.analyzer.consumer.hub.group-id=telemetry.analyzer.hub
spring.kafka.analyzer.consumer.hub.client-id=HubEventConsumer
spring.kafka.analyzer.consumer.hub.pull-timeout=2000

topic.snapshots-topic=telemetry.snapshots.v1
topic.hub-event-topic=telemetry.hubs.v1
